pkgname=glibc
pkgver=2.33
pkgrel=1
pkgdesc="GNU C Library"
arch=('x86_64')
url="http://www.gnu.org/software/libc"
license=(GPL LGPL)
options=(!strip staticlibs)
source=(https://ftp.gnu.org/gnu/glibc/glibc-$pkgver.tar.xz
        glibc.install
        sdt-config.h
        sdt.h
        bz27343.patch
        0001-nptl_db-Support-different-libpthread-ld.so-load-orde.patch
        0002-nptl-Check-for-compatible-GDB-in-nptl-tst-pthread-gd.patch
        0003-nptl-Do-not-build-nptl-tst-pthread-gdb-attach-as-PIE.patch
	locale-gen
	locale.gen.txt)
	
md5sums=('SKIP'
	 'SKIP'
	 'SKIP'
	 'SKIP'
	 'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
	 'SKIP')

prepare() {
[[ -d glibc-$pkgver ]] && ln -s glibc-$pkgver glibc 
cd glibc
sed -e '/NOTIFY_REMOVED)/s/)/ \&\& data.attr != NULL)/' \
    -i sysdeps/unix/sysv/linux/mq_notify.c
patch -p1 -i "$srcdir"/bz27343.patch
patch -p1 -i "$srcdir"/0001-nptl_db-Support-different-libpthread-ld.so-load-orde.patch
patch -p1 -i "$srcdir"/0002-nptl-Check-for-compatible-GDB-in-nptl-tst-pthread-gd.patch
patch -p1 -i "$srcdir"/0003-nptl-Do-not-build-nptl-tst-pthread-gdb-attach-as-PIE.patch

cp ${srcdir}/{sdt.h,sdt-config.h} include/sys/

}

build() {
mkdir build

#unset CPPFLAGS
#unset CFLAGS
  local _configure_flags=(
      --prefix=/
      --with-headers=/include
      --enable-add-ons
      --enable-bind-now
      --enable-cet
      --enable-kernel=4.4
      --enable-lock-elision
      --enable-multi-arch
      --enable-stack-protector=strong
      --enable-stackguard-randomization
      --enable-systemtap
      --disable-profile
      --disable-werror
  )
#      --enable-static-pie



  cd "$srcdir/build"

  echo "slibdir=/lib" >> configparms
  echo "rtlddir=/lib" >> configparms
  echo "sbindir=/bin" >> configparms
  echo "rootsbindir=/sbin" >> configparms

  # remove fortify for building libraries
  CPPFLAGS=${CPPFLAGS/-D_FORTIFY_SOURCE=2/}
  CFLAGS=${CFLAGS/-fno-plt/}
  CXXFLAGS=${CXXFLAGS/-fno-plt/}
  LDFLAGS=${LDFLAGS/,-z,now/}

  "$srcdir/glibc/configure" \
      --libdir=/lib \
      --libexecdir=/lib \
      ${_configure_flags[@]}

  # build libraries with fortify disabled
  echo "build-programs=no" >> configparms
  make

  # re-enable fortify for programs
  sed -i "/build-programs=/s#no#yes#" configparms

  echo "CC += -D_FORTIFY_SOURCE=2" >> configparms
  echo "CXX += -D_FORTIFY_SOURCE=2" >> configparms
  make
}

package() {
  pkgdesc='GNU C Library'
  install=glibc.install
  install -dm755 "$pkgdir/etc"
  touch "$pkgdir/etc/ld.so.conf"
  make -C build install_root="$pkgdir" install
  rm -f "$pkgdir"/etc/ld.so.{cache,conf}
  cd glibc
  install -dm755 "$pkgdir"/lib/locale
  install -m644 nscd/nscd.conf "$pkgdir/etc/nscd.conf"
  install -dm755 "$pkgdir/var/db/nscd"
  install -m644 posix/gai.conf "$pkgdir"/etc/gai.conf
  install -m755 "$srcdir/locale-gen" "$pkgdir/bin"
  # Create /etc/locale.gen
  install -m644 "$srcdir/locale.gen.txt" "$pkgdir/etc/locale.gen"
  sed -e '1,3d' -e 's|/| |g' -e 's|\\| |g' -e 's|^|#|g' \
    "$srcdir/glibc/localedata/SUPPORTED" >> "$pkgdir/etc/locale.gen"

  if check_option 'debug' n; then
    find "$pkgdir"/bin -type f -executable -exec strip $STRIP_BINARIES {} + 2> /dev/null || true
    find "$pkgdir"/lib -name '*.a' -type f -exec strip $STRIP_STATIC {} + 2> /dev/null || true

    # Do not strip these for gdb and valgrind functionality, but strip the rest
    find "$pkgdir"/lib \
      -not -name 'ld-*.so' \
      -not -name 'libc-*.so' \
      -not -name 'libpthread-*.so' \
      -not -name 'libthread_db-*.so' \
      -name '*-*.so' -type f -exec strip $STRIP_SHARED {} + 2> /dev/null || true
  fi

  # Provide tracing probes to libstdc++ for exceptions, possibly for other
  # libraries too. Useful for gdb's catch command.
  install -Dm644 "$srcdir/sdt.h" "$pkgdir/include/sys/sdt.h"
  install -Dm644 "$srcdir/sdt-config.h" "$pkgdir/include/sys/sdt-config.h"

  # Provided by libxcrypt; keep the old shared library for backwards compatibility
  rm -f "$pkgdir"/include/crypt.h "$pkgdir"/lib/libcrypt.{a,so}
}
